apply plugin: 'com.android.library'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'proguard-rules.pro'
            debuggable false
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    externalNativeBuild {
        ndkBuild {
            path 'jni/Android.mk'
        }
    }
    packagingOptions {
        // avoid errors like "More than one file was found with OS independent path 'lib/.../libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'

        pickFirst 'lib/arm64-v8a/libmpg123plug.so'
        pickFirst 'lib/x86_64/libmpg123plug.so'
        pickFirst 'lib/x86/libmpg123plug.so'
        pickFirst 'lib/armeabi-v7a/libmpg123plug.so'

        pickFirst 'lib/arm64-v8a/libmpg123.so'
        pickFirst 'lib/x86_64/libmpg123.so'
        pickFirst 'lib/x86/libmpg123.so'
        pickFirst 'lib/armeabi-v7a/libmpg123.so'
    }

    task cleanNdkBuild() {
        doLast {
            delete(file("$projectDir").absolutePath + '/.cxx')
            delete(file("$projectDir").absolutePath + '/obj')
            delete(file("$projectDir").absolutePath + '/libs')
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(path: ':dabaudiodecoderplugininterface')
}

clean.dependsOn cleanNdkBuild
